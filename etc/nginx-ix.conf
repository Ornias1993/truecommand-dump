worker_processes  auto;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info. 

error_log  /var/log/nginx/error.log;


#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    #include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # HTTP server
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name  localhost;
        root   /usr/www/truecommand;
        include /etc/nginx/mime.types;

        keepalive_timeout   50;
        
        location /websocket {
            proxy_pass http://127.0.0.1:5182/;
            #Due to the self-signed cert in the middleware - need to skip the strict checks
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header X-Real-Remote-Addr $remote_addr;
            proxy_set_header X-Real-Remote-Port $remote_port;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        location /api {
            proxy_pass http://127.0.0.1:5183/;
            #Due to the self-signed cert in the middleware - need to skip the strict checks
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header X-Real-Remote-Addr $remote_addr;
            proxy_set_header X-Real-Remote-Port $remote_port;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        location /docs/ {                   
            root /usr/www;
            index index.html;
            try_files $uri $uri/ $uri.html =404;     
        }

        location / {
            index  index.html index.htm;
	          try_files $uri $uri/ /index.html;
        }

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/www/nginx-dist;
        }
    }


    # HTTPS server    
    server {
        listen       443 ssl;
        server_name  localhost;
        root   /usr/www/truecommand;
        include /etc/nginx/mime.types;

        ssl_certificate      /etc/truecommand/server.crt;
        ssl_certificate_key  /etc/truecommand/server.key;

        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  10m;
        keepalive_timeout   50;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
	      add_header Strict-Transport-Security max-age=31536000;
        
        location /websocket {
            proxy_pass http://127.0.0.1:5182;
            #Due to the self-signed cert in the middleware - need to skip the strict checks
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header X-Real-Remote-Addr $remote_addr;
            proxy_set_header X-Real-Remote-Port $remote_port;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        location /api {
            proxy_pass http://127.0.0.1:5183;
            #Due to the self-signed cert in the middleware - need to skip the strict checks
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header X-Real-Remote-Addr $remote_addr;
            proxy_set_header X-Real-Remote-Port $remote_port;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        location /docs/ {                   
            root /usr/www;
            index index.html;
            try_files $uri $uri/ $uri.html =404;                
        }

        location / {
            index  index.html index.htm;
	          try_files $uri $uri/ /index.html;
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
           root   /usr/www/nginx-dist;
        }
    }

    # Now all the server proxy connections
    include "/etc/nginx-proxy/*.conf";
}
